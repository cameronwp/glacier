// Code generated by mockery v1.0.0
package fsmocks

import jobqueue "github.com/cameronwp/glacier/jobqueue"
import mock "github.com/stretchr/testify/mock"

// Chunker is an autogenerated mock type for the Chunker type
type Chunker struct {
	mock.Mock
}

// CreateChunks provides a mock function with given fields: filepath, uploadID, totalSize
func (_m *Chunker) CreateChunks(filepath string, uploadID string, totalSize int64) ([]jobqueue.Chunk, error) {
	ret := _m.Called(filepath, uploadID, totalSize)

	var r0 []jobqueue.Chunk
	if rf, ok := ret.Get(0).(func(string, string, int64) []jobqueue.Chunk); ok {
		r0 = rf(filepath, uploadID, totalSize)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]jobqueue.Chunk)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string, int64) error); ok {
		r1 = rf(filepath, uploadID, totalSize)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetFilesize provides a mock function with given fields: _a0
func (_m *Chunker) GetFilesize(_a0 string) (int64, error) {
	ret := _m.Called(_a0)

	var r0 int64
	if rf, ok := ret.Get(0).(func(string) int64); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
