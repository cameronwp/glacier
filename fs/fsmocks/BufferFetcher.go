// Code generated by mockery v1.0.0
package fsmocks

import fs "github.com/cameronwp/glacier/fs"
import mock "github.com/stretchr/testify/mock"

// BufferFetcher is an autogenerated mock type for the BufferFetcher type
type BufferFetcher struct {
	mock.Mock
}

// FetchBuffer provides a mock function with given fields: _a0, _a1, _a2
func (_m *BufferFetcher) FetchBuffer(_a0 string, _a1 int64, _a2 int64) (fs.FileChunk, error) {
	ret := _m.Called(_a0, _a1, _a2)

	var r0 fs.FileChunk
	if rf, ok := ret.Get(0).(func(string, int64, int64) fs.FileChunk); ok {
		r0 = rf(_a0, _a1, _a2)
	} else {
		r0 = ret.Get(0).(fs.FileChunk)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, int64, int64) error); ok {
		r1 = rf(_a0, _a1, _a2)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// TreeHash provides a mock function with given fields: _a0
func (_m *BufferFetcher) TreeHash(_a0 string) (string, error) {
	ret := _m.Called(_a0)

	var r0 string
	if rf, ok := ret.Get(0).(func(string) string); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
