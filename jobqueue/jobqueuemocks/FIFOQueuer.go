// Code generated by mockery v1.0.0
package jobqueuemocks

import jobqueue "github.com/cameronwp/glacier/jobqueue"
import mock "github.com/stretchr/testify/mock"

// FIFOQueuer is an autogenerated mock type for the FIFOQueuer type
type FIFOQueuer struct {
	mock.Mock
}

// Add provides a mock function with given fields: _a0
func (_m *FIFOQueuer) Add(_a0 jobqueue.Chunk) (int, error) {
	ret := _m.Called(_a0)

	var r0 int
	if rf, ok := ret.Get(0).(func(jobqueue.Chunk) int); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(jobqueue.Chunk) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Complete provides a mock function with given fields: _a0
func (_m *FIFOQueuer) Complete(_a0 *jobqueue.Job) (int, error) {
	ret := _m.Called(_a0)

	var r0 int
	if rf, ok := ret.Get(0).(func(*jobqueue.Job) int); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*jobqueue.Job) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Next provides a mock function with given fields:
func (_m *FIFOQueuer) Next() (*jobqueue.Job, error) {
	ret := _m.Called()

	var r0 *jobqueue.Job
	if rf, ok := ret.Get(0).(func() *jobqueue.Job); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*jobqueue.Job)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
