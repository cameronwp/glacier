// Code generated by mockery v1.0.0
package poolmocks

import mock "github.com/stretchr/testify/mock"
import pool "github.com/cameronwp/glacier/pool"

// FIFOQueuer is an autogenerated mock type for the FIFOQueuer type
type FIFOQueuer struct {
	mock.Mock
}

// ActivateOldestWaitingJob provides a mock function with given fields:
func (_m *FIFOQueuer) ActivateOldestWaitingJob() (int, error) {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// AddJob provides a mock function with given fields: _a0
func (_m *FIFOQueuer) AddJob(_a0 pool.Chunk) (int, error) {
	ret := _m.Called(_a0)

	var r0 int
	if rf, ok := ret.Get(0).(func(pool.Chunk) int); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(pool.Chunk) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CompleteJob provides a mock function with given fields: _a0
func (_m *FIFOQueuer) CompleteJob(_a0 *pool.Job) (int, error) {
	ret := _m.Called(_a0)

	var r0 int
	if rf, ok := ret.Get(0).(func(*pool.Job) int); ok {
		r0 = rf(_a0)
	} else {
		r0 = ret.Get(0).(int)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*pool.Job) error); ok {
		r1 = rf(_a0)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Next provides a mock function with given fields:
func (_m *FIFOQueuer) Next() (*pool.Job, error) {
	ret := _m.Called()

	var r0 *pool.Job
	if rf, ok := ret.Get(0).(func() *pool.Job); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*pool.Job)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
